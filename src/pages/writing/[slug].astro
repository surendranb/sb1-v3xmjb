---
import Layout from '../../layouts/Layout.astro';
import Navigation from '../../components/Navigation.astro';
import AnimatedSection from '../../components/AnimatedSection.astro';
import ReadingProgress from '../../components/ReadingProgress';

export async function getStaticPaths() {
  const posts = await Astro.glob('../../content/writing/*.md');
  return posts.map(post => ({
    params: { 
      slug: post.file.split('/').pop().split('.').shift() 
    },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content, frontmatter } = post;

// Calculate reading time
const wordsPerMinute = 200;
const content = post.rawContent();
const wordCount = content.split(/\s+/g).length;
const readingTime = Math.ceil(wordCount / wordsPerMinute);
---

<Layout 
  title={`${frontmatter.title} | John Doe`}
  description={frontmatter.excerpt}
  article={true}
>
  <Navigation />
  <ReadingProgress client:load />
  <main class="max-w-3xl mx-auto px-4 py-20">
    <AnimatedSection>
      <article class="prose prose-lg dark:prose-dark mx-auto">
        <div class="mb-8">
          <h1 class="font-serif text-4xl mb-4">{frontmatter.title}</h1>
          <div class="flex items-center gap-4 text-sm text-gray-500 dark:text-gray-400">
            <time>{frontmatter.date}</time>
            <span>Â·</span>
            <span>{readingTime} min read</span>
          </div>
        </div>
        <Content />
        <div class="mt-8 flex gap-2">
          {frontmatter.tags.map((tag: string) => (
            <span class="text-sm bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded">
              {tag}
            </span>
          ))}
        </div>
      </article>
    </AnimatedSection>
  </main>
</Layout>